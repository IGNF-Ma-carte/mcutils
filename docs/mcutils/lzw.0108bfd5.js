function e(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}var t=globalThis.parcelRequire8969,r=t.register;r("3yMw0",function(r,n){e(r.exports,"default",()=>l);var i=t("dJzRF");function o(e,t){for(let r=t.length-1;r>=0;r--)e.push(t[r]);return e}class l extends i.default{decodeBlock(e){return function(e){let t;let r=new Uint16Array(4093),n=new Uint8Array(4093);for(let e=0;e<=257;e++)r[e]=4096,n[e]=e;let i=258,l=9,f=0;function a(){i=258,l=9}function u(e){let t=function(e,t,r){let n=t%8,i=Math.floor(t/8),o=8*(i+2)-(t+r);if(o=Math.max(0,o),i>=e.length)return console.warn("ran off the end of the buffer before finding EOI_CODE (end on input code)"),257;let l=e[i]&2**(8-n)-1,f=l<<=r-(8-n);if(i+1<e.length){let n=e[i+1]>>>o;n<<=Math.max(0,r-((i+2)*8-t)),f+=n}return t+r-(i+1)*8>8&&i+2<e.length&&(f+=e[i+2]>>>(i+3)*8-(t+r)),f}(e,f,l);return f+=l,t}function c(e,t){return n[i]=t,r[i]=e,++i-1}function s(e){let t=[];for(let i=e;4096!==i;i=r[i])t.push(n[i]);return t}let h=[];a();let d=new Uint8Array(e),p=u(d);for(;257!==p;){if(256===p){for(a(),p=u(d);256===p;)p=u(d);if(257===p)break;if(p>256)throw Error(`corrupted code at scanline ${p}`);o(h,s(p)),t=p}else if(p<i){let e=s(p);o(h,e),c(t,e[e.length-1]),t=p}else{let e=s(t);if(!e)throw Error(`Bogus entry. Not in dictionary, ${t} / ${i}, position: ${f}`);o(h,e),h.push(e[e.length-1]),c(t,e[e.length-1]),t=p}i+1>=2**l&&(12===l?t=void 0:l++),p=u(d)}return new Uint8Array(h)}(e,!1).buffer}}}),r("dJzRF",function(r,n){e(r.exports,"default",()=>o);var i=t("fPkiP");class o{async decode(e,t){let r=await this.decodeBlock(t),n=e.Predictor||1;if(1!==n){let t=!e.StripOffsets,o=t?e.TileWidth:e.ImageWidth,l=t?e.TileLength:e.RowsPerStrip||e.ImageLength;return(0,i.applyPredictor)(r,n,o,l,e.BitsPerSample,e.PlanarConfiguration)}return r}}}),r("fPkiP",function(t,r){e(t.exports,"applyPredictor",()=>n);function n(e,t,r,n,i,o){if(!t||1===t)return e;for(let e=0;e<i.length;++e){if(i[e]%8!=0)throw Error("When decoding with predictor, only multiple of 8 bits are supported.");if(i[e]!==i[0])throw Error("When decoding with predictor, all samples must have the same size.")}let l=i[0]/8,f=2===o?1:i.length;for(let o=0;o<n;++o){let n;if(o*f*r*l>=e.byteLength)break;if(2===t){switch(i[0]){case 8:n=new Uint8Array(e,o*f*r*l,f*r*l);break;case 16:n=new Uint16Array(e,o*f*r*l,f*r*l/2);break;case 32:n=new Uint32Array(e,o*f*r*l,f*r*l/4);break;default:throw Error(`Predictor 2 not allowed with ${i[0]} bits per sample.`)}!function(e,t){let r=e.length-t,n=0;do{for(let r=t;r>0;r--)e[n+t]+=e[n],n++;r-=t}while(r>0)}(n,f,l)}else 3===t&&function(e,t,r){let n=0,i=e.length,o=i/r;for(;i>t;){for(let r=t;r>0;--r)e[n+t]+=e[n],++n;i-=t}let l=e.slice();for(let t=0;t<o;++t)for(let n=0;n<r;++n)e[r*t+n]=l[(r-n-1)*o+t]}(n=new Uint8Array(e,o*f*r*l,f*r*l),f,l)}return e}});