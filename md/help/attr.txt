## Les attributs

Le format markdown est étendu pour afficher des attributs fournis lors d'une sélection par exemple.
Dans les exemples ci-dessous, les attributs suivant sont fournis
| attributs | valeurs |
| --------- | ------- |
%ATTRIBUTES%

Pour afficher un attribut, il suffit de le mettre entre deux `%`.
[++ :fa-code:fw: Code ++]
```md
%name%
%address%
%cp% %commune%
```
[----]
[++ :fa-desktop:fw: Résultat ++]
%name%
%address%
%cp% %commune%
[----]

#### Liste des attributs

Il est possible d'afficher la liste des attributs disponibles sur un objet à l'aide de : `&percnt;ATTRIBUTES%`

[++ :fa-code:fw: Code ++]
```md
%ATTRIBUTES%
```
[----]
[++ :fa-desktop:fw: Résultat ++]
%ATTRIBUTES%
[----]


#### Attibuts calculés

Lorsqu'un objet est sélectionné, les attributs `%COORD%` (coordonées) et `%COORDMS%` (coordonnes en degré, minutes, secondes) de l'objet sont disponibles, ainsi que `%LENGTH%` pour une ligne et `%AREA%` pour un polygone.

#### Attributs liens

Si votre attribut est un lien avec des caractères spéciaux, vous pouvez les échapper en utilisant la fonction `URL[%attr%]`.
Si votre attribut est destiné à être inclue comme composant d'une url (URICompoenent), vous pouvez `URI[%attr%]`.

[++ :fa-code:fw: Code ++]
```md
Un caractère ',' est illégal. La fin du lien ne sera pas pris en compte, il faut utiliser `URL[%attr%']`.
- [ ] %img% 
- [x] URL[%img%]
- [x] !(URL[%img%] 200)
```
[----]
[++ :fa-desktop:fw: Résultat ++]
Un caractère ',' est illégal. La fin du lien ne sera pas pris en compte, il faut utiliser `URL[%attr%']`.
- [ ] %img% 
- [x] URL[%img%]
- [x] !(URL[%img%] 200)
[----]

### Code HTML

Le code HTML dans les attributs est échappé. Si vous voulez le supprimer, vous devez utiliser `HTML[%attr%]`.

[++ :fa-code:fw: Code ++]
```md
1. %html% 
2. HTML[%html%]
```
[----]
[++ :fa-desktop:fw: Résultat ++]
1. %html% 
2. HTML[%html%]
[----]

### Affichage conditionnel

Il est possible de conditionner l'affichage à la présence (ou non) d'un attribut.
Pour cela, il suffit de mettre l'attribut entre double parenthèses `&lpar;(&percnt;attr&percnt;))`.
Dans ce cas, l'ensemble de l'expression entre parenthèses s'affiche ou non suivant la valeur de l'attribut.

[++ :fa-code:fw: Code ++]
```md
1. name : ((l'attribut %name% est défini (et s'affiche).))
2. nom : ((l'attribut %nom% n'est pas défini (et ne s'affiche pas).))
```
[----]
[++ :fa-desktop:fw: Résultat ++]
1. name : ((l'attribut %name% est défini (et s'affiche).))
2. nom : ((l'attribut %nom% n'est pas défini (et ne s'affiche pas).))
[----]

#### Affichage alternatif

Il est possible d'ajouter un texte alternatif qui s'affichera en lieu et place si l'attribut n'est pas défini en l'ajoutant dans les parenthèses après une double barre : `||`
[++ :fa-code:fw: Code ++]
```md
1. ((name = %name% (défini) || `name` n'est pas défini ))
2. ((nom = %nom% (défini)   || `nom` n'est pas défini  ))
```
[----]
[++ :fa-desktop:fw: Résultat ++]
1. ((name = %name% (défini) || `name` n'est pas défini ))
2. ((nom = %nom% (défini)   || `nom` n'est pas défini  ))
[----]

#### Conditions multiple

Les condition peuvent s'ajouter entre elles lorsqu'elles sont entre les parenthèses.
[++ :fa-code:fw: Code ++]
```md
1. ((%name% et %commune% sont définis.))
2. ((%name% et %ville% sont définis.))
```
[----]
[++ :fa-desktop:fw: Résultat ++]
1. ((%name% et %commune% sont définis.))
2. ((%name% et %ville% sont définis.))
[----]

#### Tests conditionnels

Il est possible de tester l'existence d'une valeur sans l'afficher en utilisant `&lpar;(?&percnt;attr&percnt;` ou `&lpar;(!&percnt;attr&percnt;`.

[++ :fa-code:fw: Code ++]
```md
1. ((?%name% L'attribut `name` est défini. )) ((!%name% L'attribut `name` n'est pas défini. ))
2. ((?%nom% L'attribut `nom` est défini. )) ((!%nom% L'attribut `nom` n'est pas défini. ))
```
[----]
[++ :fa-desktop:fw: Résultat ++]
1. ((?%name% L'attribut `name` est défini. )) ((!%name% L'attribut `name` n'est pas défini. ))
2. ((?%nom% L'attribut `nom` est défini. )) ((!%nom% L'attribut `nom` n'est pas défini. ))
[----]

### Caractères d'échappement

Utilisez `&amp;lpar;`, `&amp;rpar;`  ou `&amp;percnt;` pour échapper les caractères (`(`, `)` ou `%`) dans votre code.

## Afficher la fiche d'un objet

Il est également possible d'afficher la fiche d'un objet lorsqu'il est sélectionné (dans le volet d'une narration) gràce au widget `FeatureSelect`.
Vous pouvez préciser la couche pour laquelle on affiche le contenu de la fiche en précisant son numéro (`layerId`).
[++ :fa-code:fw: Code ++]
```md
&#96;``FeatureSelect
layerId: 2
&#96;``
```
[----]

Il est également possible de préciser **une condition** sur l'objet sélectionné en indiquant le nom de l'attribut sur lequel on conditionne (`attr`), un opérateur (`op`) et une valeur à tester (`value`).
Les opérateurs sont les opérateur d'égalité (`=`: égale, `!=`: différent), de supériorité (`<`, `<=`, `>`, `>=`), d'inclusion (`contain`: contient, `!contain`: ne contient pas) ou une expression régulière (`regexp`, `!regexp`).
Il est possible de préciser si la comparaison est sensible à la case (`matchCase`).

Vous pouvez alors utiliser une bloc `---INFO` pour préciser l'affichage de l'objet. Utilisez un bloc `---INFO ok` qui s'affichera si la condition est respectée ou `---INFO nok` dans le cas contraire. Ces bloques peuvent eux-même contenir du Markdown et faire référence aux attributs de l'objet sélectionné.

Par exemple, pour vérifier qu'on a bien cliqué sur la "Loire".
[++ :fa-code:fw: Code ++]
```md
&#96;``FeatureSelect
layerId: 2
attr: nom
op: contain
value: Loire
matchCase: 1
---INFO
Le nom de la sélection : %nom% (va toujours s'afficher)
---INFO ok
Texte en cas de condition respectée : le nom de l'objet (%nom%) contient "Loire"
---INFO nok
Texte en cas de non respect de la condition : le nom ne contient pas "Loire"
&#96;``
```
[----]

Vous pouvez préciser comment on affiche la fiche avec le paramètre `display` (none : jamais, all : toujours, layer : pour la couche, condition : si respecte la condition)
Enfin, si vous préciser un QCM, cela va premettre de décompter la réponse comme un QCM (valide si respecte la condition) ou pas.
[-- :fa-code:fw: Code --]
```md
&#96;``FeatureSelect
layerId: 2
display: layer
attr: nom
op: contain
value: Loire
matchCase: 1
QCM: Loire
---INFO ok
Texte en cas de bonne réponse
---INFO nok
Texte en cas de mauvaise réponse
&#96;``
```
[----]


